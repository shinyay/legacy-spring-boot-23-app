{"version":3,"sources":["services/api.js","store/actions/booksActions.js","components/BookList.js","store/actions/inventoryActions.js","components/InventoryList.js","components/Dashboard.js","App.js","store/reducers/booksReducer.js","store/reducers/inventoryReducer.js","store/reducers/index.js","store/index.js","theme.js","index.js"],"names":["api","axios","create","baseURL","process","REACT_APP_API_URL","timeout","headers","booksApi","params","arguments","length","undefined","page","size","sortBy","sortDir","keyword","get","inventoryApi","getInventory","getInventoryAlerts","getOutOfStockItems","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","FETCH_BOOKS_START","FETCH_BOOKS_SUCCESS","FETCH_BOOKS_FAILURE","FETCH_BOOK_START","FETCH_BOOK_SUCCESS","FETCH_BOOK_FAILURE","CREATE_BOOK_START","CREATE_BOOK_SUCCESS","CREATE_BOOK_FAILURE","UPDATE_BOOK_START","UPDATE_BOOK_SUCCESS","UPDATE_BOOK_FAILURE","DELETE_BOOK_START","DELETE_BOOK_SUCCESS","DELETE_BOOK_FAILURE","fetchBooks","async","dispatch","type","payload","data","_error$response$data","message","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","searchBox","display","gap","alignItems","levelChip","titleCell","maxWidth","overflow","textOverflow","whiteSpace","loading","justifyContent","height","BookList","classes","useDispatch","books","useSelector","state","_state$books","_state$books$books","content","_state$books2","_state$books3","searchKeyword","setSearchKeyword","useState","useEffect","getLevelColor","level","getLevelLabel","React","createElement","className","CircularProgress","Box","p","Typography","color","variant","gutterBottom","onSubmit","event","preventDefault","TextField","label","value","onChange","target","placeholder","style","Button","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","book","key","id","isbn13","title","publisherName","publicationDate","Date","toLocaleDateString","listPrice","toLocaleString","Chip","FETCH_INVENTORY_START","FETCH_INVENTORY_SUCCESS","FETCH_INVENTORY_FAILURE","FETCH_INVENTORY_ALERTS_START","FETCH_INVENTORY_ALERTS_SUCCESS","FETCH_INVENTORY_ALERTS_FAILURE","RECEIVE_STOCK_START","RECEIVE_STOCK_SUCCESS","RECEIVE_STOCK_FAILURE","SELL_STOCK_START","SELL_STOCK_SUCCESS","SELL_STOCK_FAILURE","actionButtons","stockChip","InventoryList","inventoryItems","_state$inventory","inventory","items","_state$inventory2","_state$inventory3","getStockStatusColor","availableStock","lowStock","align","item","bookTitle","storeStock","warehouseStock","reservedCount","locationCode","colSpan","flexGrow","padding","textAlign","palette","text","secondary","card","statCard","statIcon","fontSize","primary","main","statNumber","fontWeight","alertCard","alertIcon","warning","marginRight","Dashboard","setLoading","setError","stats","setStats","totalBooks","lowStockItems","outOfStock","pendingOrders","recentBooks","setRecentBooks","lowStockAlerts","setLowStockAlerts","booksResponse","inventoryResponse","alertsResponse","outOfStockResponse","all","reduce","sum","err","_err$response","_err$response$data","console","fetchDashboardData","Grid","container","xs","sm","md","Card","CardContent","Storage","Warning","ShoppingCart","List","ListItem","ListItemText","alert","reorderPoint","drawerWidth","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","backgroundColor","background","default","App","selectedMenu","setSelectedMenu","menuItems","icon","path","Book","People","Assessment","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","anchor","button","selected","onClick","ListItemIcon","Switch","Route","exact","component","DashboardPage","render","initialState","selectedBook","booksReducer","action","totalElements","filter","Math","max","alerts","inventoryReducer","bookId","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createMuiTheme","typography","h6","ReactDOM","Provider","BrowserRouter","ThemeProvider","document","getElementById"],"mappings":"udAGA,MAAMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAASC,mIAAYC,mBAAqB,+BAC1CC,QAAS,IACTC,QAAS,CACP,eAAgB,sBAKPC,EAED,WAAkB,IAAjBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnB,MAAM,KAAEG,EAAO,EAAC,KAAEC,EAAO,GAAE,OAAEC,EAAS,KAAI,QAAEC,EAAU,MAAK,QAAEC,EAAU,IAAOR,EAC9E,OAAOT,EAAIkB,IAAI,SAAU,CACvBT,OAAQ,CAAEI,OAAMC,OAAMC,SAAQC,UAASC,YAE3C,EA6BWE,EAEGC,IACLpB,EAAIkB,IAAI,cAHNC,EAYSE,IACXrB,EAAIkB,IAAI,qBAbNC,EAiBSG,IACXtB,EAAIkB,IAAI,2BAoBnBlB,EAAIuB,aAAaC,QAAQC,IACtBC,IAEC,MAAMC,EAAQC,aAAaC,QAAQ,aAInC,OAHIF,IACFD,EAAOnB,QAAQuB,cAAgB,UAAUH,KAEpCD,GAERK,GACQC,QAAQC,OAAOF,IAK1B/B,EAAIuB,aAAaW,SAAST,IACvBS,GACQA,EAERH,IAAW,IAADI,EAOT,OAL+B,OAAb,QAAdA,EAAAJ,EAAMG,gBAAQ,IAAAC,OAAA,EAAdA,EAAgBC,UAElBR,aAAaS,WAAW,aACxBC,OAAOC,SAASC,KAAO,UAElBR,QAAQC,OAAOF,KC7GnB,MAAMU,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAsB,sBAEtBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAsB,sBAEtBC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAsB,sBAEtBC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAsB,sBAGtBC,GAAa,WAAkB,IAAjB/C,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,OAAO+C,UACLC,EAAS,CAAEC,KAAMlB,IAEjB,IACE,MAAMP,QAAiB1B,EAAkBC,GAKzC,OAJAiD,EAAS,CACPC,KAAMjB,EACNkB,QAAS1B,EAAS2B,OAEb3B,EAAS2B,IAClB,CAAE,MAAO9B,GAAQ,IAADI,EAAA2B,EAKd,MAJAJ,EAAS,CACPC,KAAMhB,EACNiB,SAAuB,QAAdzB,EAAAJ,EAAMG,gBAAQ,IAAAC,GAAM,QAAN2B,EAAd3B,EAAgB0B,YAAI,IAAAC,OAAN,EAAdA,EAAsBC,UAAWhC,EAAMgC,UAE5ChC,CACR,EAEJ,ECvBMiC,GAAYC,YAAYC,IAAK,CACjCC,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPE,aAAcJ,EAAMK,QAAQ,IAE9BC,MAAO,CACLC,SAAU,KAEZC,UAAW,CACTJ,aAAcJ,EAAMK,QAAQ,GAC5BI,QAAS,OACTC,IAAKV,EAAMK,QAAQ,GACnBM,WAAY,UAEdC,UAAW,CACTL,SAAU,IAEZM,UAAW,CACTC,SAAU,IACVC,SAAU,SACVC,aAAc,WACdC,WAAY,UAEdC,QAAS,CACPT,QAAS,OACTU,eAAgB,SAChBR,WAAY,SACZS,OAAQ,QAsLGC,OAlLf,WACE,MAAMC,EAAUxB,KACVN,EAAW+B,cAGXC,EAAQC,YAAaC,IAAK,IAAAC,EAAAC,EAAA,OAAgB,QAAXD,EAAAD,EAAMF,aAAK,IAAAG,GAAO,QAAPC,EAAXD,EAAaH,aAAK,IAAAI,OAAP,EAAXA,EAAoBC,UAAW,KAC9DX,EAAUO,YAAaC,IAAK,IAAAI,EAAA,OAAgB,QAAXA,EAAAJ,EAAMF,aAAK,IAAAM,OAAA,EAAXA,EAAaZ,WAAW,IACzDrD,EAAQ4D,YAAaC,IAAK,IAAAK,EAAA,OAAgB,QAAhBA,EAAKL,EAAMF,aAAK,IAAAO,OAAA,EAAXA,EAAalE,SAG3CmE,EAAeC,GAAoBC,mBAAS,IASnDC,oBAAU,KAQR3C,EAASF,GAPM,CACb3C,KARS,EASTC,KARgB,GAShBC,OARW,KASXC,QARY,MASZC,QAASiF,MAGV,CAACxC,EAAUwC,IAEd,MAgBMI,EAAiBC,IACrB,OAAQA,GACN,IAAK,WACH,MAAO,UACT,IAAK,eACH,MAAO,YAGT,QACE,MAAO,YAIPC,EAAiBD,IACrB,OAAQA,GACN,IAAK,WACH,MAAO,eACT,IAAK,eACH,MAAO,eACT,IAAK,WACH,MAAO,eACT,QACE,OAAOA,IAIb,OAAInB,GAA4B,IAAjBM,EAAM/E,OAEjB8F,IAAAC,cAAA,OAAKC,UAAWnB,EAAQJ,SACtBqB,IAAAC,cAACE,IAAgB,OAKnB7E,EAEA0E,IAAAC,cAACG,IAAG,CAACC,EAAG,GACNL,IAAAC,cAACK,IAAU,CAACC,MAAM,SAAQ,iEACXjF,IAOnB0E,IAAAC,cAAA,OAAKC,UAAWnB,EAAQrB,MACtBsC,IAAAC,cAACK,IAAU,CAACE,QAAQ,KAAKC,cAAY,GAAC,4BAKtCT,IAAAC,cAAA,QAAMS,SA/DkBC,IAC1BA,EAAMC,iBAQN3D,EAASF,GAPM,CACb3C,KAxBS,EAyBTC,KAxBgB,GAyBhBC,OAxBW,KAyBXC,QAxBY,MAyBZC,QAASiF,OAyDPO,IAAAC,cAACG,IAAG,CAACF,UAAWnB,EAAQd,WACtB+B,IAAAC,cAACY,IAAS,CACRC,MAAM,6CACNN,QAAQ,WACRO,MAAOtB,EACPuB,SAzEkBL,IAC1BjB,EAAiBiB,EAAMM,OAAOF,QAyEtBG,YAAY,+EACZC,MAAO,CAAEnD,SAAU,OAErBgC,IAAAC,cAACmB,IAAM,CACLlE,KAAK,SACLsD,QAAQ,YACRD,MAAM,WACP,kBAMLP,IAAAC,cAACoB,IAAK,CAACnB,UAAWnB,EAAQnB,OACxBoC,IAAAC,cAACqB,IAAc,KACbtB,IAAAC,cAACsB,IAAK,CAACrB,UAAWnB,EAAQhB,OACxBiC,IAAAC,cAACuB,IAAS,KACRxB,IAAAC,cAACwB,IAAQ,KACPzB,IAAAC,cAACyB,IAAS,KAAC,MACX1B,IAAAC,cAACyB,IAAS,KAAC,WACX1B,IAAAC,cAACyB,IAAS,KAAC,4BACX1B,IAAAC,cAACyB,IAAS,KAAC,sBACX1B,IAAAC,cAACyB,IAAS,KAAC,sBACX1B,IAAAC,cAACyB,IAAS,KAAC,gBACX1B,IAAAC,cAACyB,IAAS,KAAC,sBACX1B,IAAAC,cAACyB,IAAS,KAAC,oCAGf1B,IAAAC,cAAC0B,IAAS,KACP1C,EAAM2C,IAAKC,GACV7B,IAAAC,cAACwB,IAAQ,CAACK,IAAKD,EAAKE,IAClB/B,IAAAC,cAACyB,IAAS,KAAEG,EAAKE,IACjB/B,IAAAC,cAACyB,IAAS,KAAEG,EAAKG,QACjBhC,IAAAC,cAACyB,IAAS,CAACxB,UAAWnB,EAAQT,WAC5B0B,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQyB,MAAOJ,EAAKI,OACrCJ,EAAKI,QAGVjC,IAAAC,cAACyB,IAAS,KAAEG,EAAKK,eACjBlC,IAAAC,cAACyB,IAAS,KACPG,EAAKM,gBAAkB,IAAIC,KAAKP,EAAKM,iBAAiBE,mBAAmB,SAAW,KAEvFrC,IAAAC,cAACyB,IAAS,KACPG,EAAKS,UAAY,OAAIT,EAAKS,UAAUC,mBAAqB,KAE5DvC,IAAAC,cAACyB,IAAS,KACPG,EAAK/B,OACJE,IAAAC,cAACuC,IAAI,CACH1B,MAAOf,EAAc8B,EAAK/B,OAC1BS,MAAOV,EAAcgC,EAAK/B,OAC1BzF,KAAK,QACL6F,UAAWnB,EAAQV,aAIzB2B,IAAAC,cAACyB,IAAS,KACR1B,IAAAC,cAACmB,IAAM,CACLZ,QAAQ,WACRnG,KAAK,QACLkG,MAAM,WACP,uBAYrB,ECnOO,MAAMkC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAA0B,0BAE1BC,GAA+B,+BAC/BC,GAAiC,iCACjCC,GAAiC,iCAEjCC,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAwB,wBAExBC,GAAmB,mBACnBC,GAAqB,qBACrBC,GAAqB,qBCE5B7F,GAAYC,YAAYC,IAAK,CACjCC,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPE,aAAcJ,EAAMK,QAAQ,IAE9BC,MAAO,CACLC,SAAU,KAEZqF,cAAe,CACbnF,QAAS,OACTC,IAAKV,EAAMK,QAAQ,IAErBwF,UAAW,CACTtF,SAAU,IAEZM,UAAW,CACTC,SAAU,IACVC,SAAU,SACVC,aAAc,WACdC,WAAY,UAEdC,QAAS,CACPT,QAAS,OACTU,eAAgB,SAChBR,WAAY,SACZS,OAAQ,QAmJG0E,OA/If,WACE,MAAMxE,EAAUxB,KACVN,EAAW+B,cAGXwE,EAAiBtE,YAAaC,IAAK,IAAAsE,EAAA,OAAoB,QAAfA,EAAAtE,EAAMuE,iBAAS,IAAAD,OAAA,EAAfA,EAAiBE,QAAS,KAClEhF,EAAUO,YAAaC,IAAK,IAAAyE,EAAA,OAAoB,QAAfA,EAAAzE,EAAMuE,iBAAS,IAAAE,OAAA,EAAfA,EAAiBjF,WAAW,IAC7DrD,EAAQ4D,YAAaC,IAAK,IAAA0E,EAAA,OAAoB,QAApBA,EAAK1E,EAAMuE,iBAAS,IAAAG,OAAA,EAAfA,EAAiBvI,QAEtDsE,oBAAU,KACR3C,EDxCKD,UACLC,EAAS,CAAEC,KAAMuF,KAEjB,IACE,MAAMhH,QAAiBf,IAKvB,OAJAuC,EAAS,CACPC,KAAMwF,GACNvF,QAAS1B,EAAS2B,OAEb3B,EAAS2B,IAClB,CAAE,MAAO9B,GAAQ,IAADI,EAAA2B,EAKd,MAJAJ,EAAS,CACPC,KAAMyF,GACNxF,SAAuB,QAAdzB,EAAAJ,EAAMG,gBAAQ,IAAAC,GAAM,QAAN2B,EAAd3B,EAAgB0B,YAAI,IAAAC,OAAN,EAAdA,EAAsBC,UAAWhC,EAAMgC,UAE5ChC,CACR,KCyBC,CAAC2B,IAEJ,MAAM6G,EAAsBA,CAACC,EAAgBC,IACvCD,GAAkB,EACb,YACEC,EACF,UAEA,UAkBX,OAAIrF,EAEAqB,IAAAC,cAAA,OAAKC,UAAWnB,EAAQJ,SACtBqB,IAAAC,cAACE,IAAgB,OAKnB7E,EAEA0E,IAAAC,cAACG,IAAG,CAACC,EAAG,GACNL,IAAAC,cAACK,IAAU,CAACC,MAAM,SAAQ,iEACXjF,IAOnB0E,IAAAC,cAAA,OAAKC,UAAWnB,EAAQrB,MACtBsC,IAAAC,cAACK,IAAU,CAACE,QAAQ,KAAKC,cAAY,GAAC,4BAItCT,IAAAC,cAACoB,IAAK,CAACnB,UAAWnB,EAAQnB,OACxBoC,IAAAC,cAACqB,IAAc,KACbtB,IAAAC,cAACsB,IAAK,CAACrB,UAAWnB,EAAQhB,OACxBiC,IAAAC,cAACuB,IAAS,KACRxB,IAAAC,cAACwB,IAAQ,KACPzB,IAAAC,cAACyB,IAAS,KAAC,wCACX1B,IAAAC,cAACyB,IAAS,KAAC,WACX1B,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAAQ,4BACzBjE,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAAQ,4BACzBjE,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAAQ,sBACzBjE,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAAQ,wCACzBjE,IAAAC,cAACyB,IAAS,KAAC,4BACX1B,IAAAC,cAACyB,IAAS,KAAC,sBACX1B,IAAAC,cAACyB,IAAS,KAAC,oCAGf1B,IAAAC,cAAC0B,IAAS,KACP6B,EAAe5B,IAAKsC,IACnBlE,WAAAC,cAACwB,IAAQ,CAACK,IAAKoC,EAAKnC,IAClB/B,IAAAC,cAACyB,IAAS,CAACxB,UAAWnB,EAAQT,WAC5B0B,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQyB,MAAOiC,EAAKC,WACrCD,EAAKC,YAGVnE,IAAAC,cAACyB,IAAS,KAAEwC,EAAKlC,QACjBhC,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAASC,EAAKE,YAC/BpE,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAASC,EAAKG,gBAC/BrE,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SAASC,EAAKI,eAC/BtE,IAAAC,cAACyB,IAAS,CAACuC,MAAM,SACfjE,IAAAC,cAACK,IAAU,CACTE,QAAQ,QACRD,MAAO2D,EAAKH,gBAAkB,EAAI,QAAU,eAE3CG,EAAKH,iBAGV/D,IAAAC,cAACyB,IAAS,KACR1B,IAAAC,cAACuC,IAAI,CACH1B,OA5ESiD,EA4EkBG,EAAKH,eA5EPC,EA4EuBE,EAAKF,SA3EnED,GAAkB,EACb,2BACEC,EACF,qBAEA,sBAuESzD,MAAOuD,EAAoBI,EAAKH,eAAgBG,EAAKF,UACrD3J,KAAK,QACL6F,UAAWnB,EAAQuE,aAGvBtD,IAAAC,cAACyB,IAAS,KAAiBwC,EAAKK,cAvEvB,KAwETvE,IAAAC,cAACyB,IAAS,KACR1B,IAAAC,cAAA,OAAKC,UAAWnB,EAAQsE,eACtBrD,IAAAC,cAACmB,IAAM,CACLZ,QAAQ,WACRnG,KAAK,QACLkG,MAAM,WACP,gBAGDP,IAAAC,cAACmB,IAAM,CACLZ,QAAQ,WACRnG,KAAK,QACLkG,MAAM,aACP,mBAtFGgE,IAVKR,EAAgBC,IAuGN,IAA1BR,EAAetJ,QACd8F,IAAAC,cAACwB,IAAQ,KACPzB,IAAAC,cAACyB,IAAS,CAAC8C,QAAS,EAAGP,MAAM,UAC3BjE,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQD,MAAM,iBAAgB,4EAYtE,E,wCC/KA,MAAMhD,GAAYC,YAAYC,IAAK,CACjCC,KAAM,CACJ+G,SAAU,GAEZ7G,MAAO,CACL8G,QAASjH,EAAMK,QAAQ,GACvB6G,UAAW,SACXpE,MAAO9C,EAAMmH,QAAQC,KAAKC,WAE5BC,KAAM,CACJlG,OAAQ,QAEVmG,SAAU,CACRN,QAASjH,EAAMK,QAAQ,GACvBI,QAAS,OACTE,WAAY,SACZD,IAAKV,EAAMK,QAAQ,IAErBmH,SAAU,CACRC,SAAU,GACV3E,MAAO9C,EAAMmH,QAAQO,QAAQC,MAE/BC,WAAY,CACVH,SAAU,OACVI,WAAY,OACZ/E,MAAO9C,EAAMmH,QAAQC,KAAKM,SAE5BI,UAAW,CACTb,QAASjH,EAAMK,QAAQ,IAEzB0H,UAAW,CACTjF,MAAO9C,EAAMmH,QAAQa,QAAQL,KAC7BM,YAAajI,EAAMK,QAAQ,IAE7Ba,QAAS,CACPT,QAAS,OACTU,eAAgB,SAChBR,WAAY,SACZS,OAAQ,QAkPG8G,OA9Of,WACE,MAAM5G,EAAUxB,MACToB,EAASiH,GAAcjG,oBAAS,IAChCrE,EAAOuK,GAAYlG,mBAAS,OAC5BmG,EAAOC,GAAYpG,mBAAS,CACjCqG,WAAY,EACZC,cAAe,EACfC,WAAY,EACZC,cAAe,KAEVC,EAAaC,GAAkB1G,mBAAS,KACxC2G,EAAgBC,GAAqB5G,mBAAS,IAErDC,oBAAU,KACmB5C,WACzB,IACE4I,GAAW,GACXC,EAAS,MAGT,MAAOW,EAAeC,EAAmBC,EAAgBC,SAA4BpL,QAAQqL,IAAI,CAC/F7M,EAAkB,CAAEK,KAAM,EAAGC,KAAM,EAAGC,OAAQ,KAAMC,QAAS,SAC7DG,IACAA,IACAA,MAIIgJ,EAAY+C,EAAkBrJ,KAC9B4I,EAAatC,EAAUxJ,OACvB+L,EAAgBS,EAAetJ,KAAKlD,OACpCgM,EAAaS,EAAmBvJ,KAAKlD,OACrCiM,EAAgBzC,EAAUmD,OAAO,CAACC,EAAK5C,IAAS4C,GAAO5C,EAAKI,eAAiB,GAAI,GAEvFyB,EAAS,CACPC,aACAC,gBACAC,aACAC,kBAGFE,EAAeG,EAAcpJ,KAAKkC,SAAWkH,EAAcpJ,MAAQ,IACnEmJ,EAAkBG,EAAetJ,MAAQ,GAC3C,CAAE,MAAO2J,GAAM,IAADC,EAAAC,EACZC,QAAQ5L,MAAM,iCAAkCyL,GAChDlB,GAAqB,QAAZmB,EAAAD,EAAItL,gBAAQ,IAAAuL,GAAM,QAANC,EAAZD,EAAc5J,YAAI,IAAA6J,OAAN,EAAZA,EAAoB3J,UAAWyJ,EAAIzJ,SAAW,iFACzD,CAAC,QACCsI,GAAW,EACb,GAGFuB,IACC,IAEH,MAAMpH,EAAiBD,IACrB,OAAQA,GACN,IAAK,WACH,MAAO,eACT,IAAK,eACH,MAAO,eACT,IAAK,WACH,MAAO,eACT,QACE,MAAO,MAIPD,EAAiBC,IACrB,OAAQA,GACN,IAAK,WACH,MAAO,UACT,IAAK,eACH,MAAO,YAGT,QACE,MAAO,YAIb,OAAInB,EAEAqB,IAAAC,cAAA,OAAKC,UAAWnB,EAAQJ,SACtBqB,IAAAC,cAACE,IAAgB,OAKnB7E,EAEA0E,IAAAC,cAACG,IAAG,CAACC,EAAG,GACNL,IAAAC,cAACK,IAAU,CAACC,MAAM,SAAQ,iEACXjF,IAOnB0E,IAAAC,cAAA,OAAKC,UAAWnB,EAAQrB,MACtBsC,IAAAC,cAACK,IAAU,CAACE,QAAQ,KAAKC,cAAY,GAAC,8CAItCT,IAAAC,cAACmH,KAAI,CAACC,WAAS,EAACvJ,QAAS,GAEvBkC,IAAAC,cAACmH,KAAI,CAAClD,MAAI,EAACoD,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BxH,IAAAC,cAACwH,KAAI,CAACvH,UAAWnB,EAAQgG,MACvB/E,IAAAC,cAACyH,KAAW,CAACxH,UAAWnB,EAAQiG,UAC9BhF,IAAAC,cAAC0H,IAAO,CAACzH,UAAWnB,EAAQkG,WAC5BjF,IAAAC,cAACG,IAAG,KACFJ,IAAAC,cAACK,IAAU,CAACJ,UAAWnB,EAAQsG,aACvB,OAALS,QAAK,IAALA,OAAK,EAALA,EAAOE,aAAc,GAExBhG,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQD,MAAM,iBAAgB,gCAQ1DP,IAAAC,cAACmH,KAAI,CAAClD,MAAI,EAACoD,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BxH,IAAAC,cAACwH,KAAI,CAACvH,UAAWnB,EAAQgG,MACvB/E,IAAAC,cAACyH,KAAW,CAACxH,UAAWnB,EAAQiG,UAC9BhF,IAAAC,cAAC2H,KAAO,CAAC1H,UAAWnB,EAAQkG,SAAU9D,MAAO,CAAEZ,MAAO,aACtDP,IAAAC,cAACG,IAAG,KACFJ,IAAAC,cAACK,IAAU,CAACJ,UAAWnB,EAAQsG,aACvB,OAALS,QAAK,IAALA,OAAK,EAALA,EAAOG,gBAAiB,GAE3BjG,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQD,MAAM,iBAAgB,gCAQ1DP,IAAAC,cAACmH,KAAI,CAAClD,MAAI,EAACoD,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BxH,IAAAC,cAACwH,KAAI,CAACvH,UAAWnB,EAAQgG,MACvB/E,IAAAC,cAACyH,KAAW,CAACxH,UAAWnB,EAAQiG,UAC9BhF,IAAAC,cAAC2H,KAAO,CAAC1H,UAAWnB,EAAQkG,SAAU9D,MAAO,CAAEZ,MAAO,aACtDP,IAAAC,cAACG,IAAG,KACFJ,IAAAC,cAACK,IAAU,CAACJ,UAAWnB,EAAQsG,aACvB,OAALS,QAAK,IAALA,OAAK,EAALA,EAAOI,aAAc,GAExBlG,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQD,MAAM,iBAAgB,gCAQ1DP,IAAAC,cAACmH,KAAI,CAAClD,MAAI,EAACoD,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BxH,IAAAC,cAACwH,KAAI,CAACvH,UAAWnB,EAAQgG,MACvB/E,IAAAC,cAACyH,KAAW,CAACxH,UAAWnB,EAAQiG,UAC9BhF,IAAAC,cAAC4H,IAAY,CAAC3H,UAAWnB,EAAQkG,WACjCjF,IAAAC,cAACG,IAAG,KACFJ,IAAAC,cAACK,IAAU,CAACJ,UAAWnB,EAAQsG,aACvB,OAALS,QAAK,IAALA,OAAK,EAALA,EAAOK,gBAAiB,GAE3BnG,IAAAC,cAACK,IAAU,CAACE,QAAQ,QAAQD,MAAM,iBAAgB,gCAS1DP,IAAAC,cAACmH,KAAI,CAAClD,MAAI,EAACoD,GAAI,GAAIE,GAAI,GACrBxH,IAAAC,cAACwH,KAAI,CAACvH,UAAWnB,EAAQgG,MACvB/E,IAAAC,cAACyH,KAAW,KACV1H,IAAAC,cAACK,IAAU,CAACE,QAAQ,KAAKC,cAAY,GAAC,0DAGtCT,IAAAC,cAAC6H,IAAI,KACF1B,EAAYxE,IAAKC,GAChB7B,IAAAC,cAAC8H,IAAQ,CAACjG,IAAKD,EAAKE,IAClB/B,IAAAC,cAAC+H,IAAY,CACX7C,QAAStD,EAAKI,MACd6C,UAAW,SAASjD,EAAKG,WAE3BhC,IAAAC,cAACuC,IAAI,CACH1B,MAAOf,EAAc8B,EAAK/B,OAC1BS,MAAOV,EAAcgC,EAAK/B,OAC1BzF,KAAK,YAIa,IAAvB+L,EAAYlM,QACX8F,IAAAC,cAAC8H,IAAQ,KACP/H,IAAAC,cAAC+H,IAAY,CACX7C,QAAQ,yDACRL,UAAU,oGAUxB9E,IAAAC,cAACmH,KAAI,CAAClD,MAAI,EAACoD,GAAI,GAAIE,GAAI,GACrBxH,IAAAC,cAACwH,KAAI,CAACvH,UAAWnB,EAAQgG,MACvB/E,IAAAC,cAACyH,KAAW,KACV1H,IAAAC,cAACK,IAAU,CAACE,QAAQ,KAAKC,cAAY,GAAC,wCAGtCT,IAAAC,cAAC6H,IAAI,KACFxB,EAAe1E,IAAKqG,GACnBjI,IAAAC,cAAC8H,IAAQ,CAACjG,IAAKmG,EAAMlG,IACnB/B,IAAAC,cAAC2H,KAAO,CAAC1H,UAAWnB,EAAQyG,YAC5BxF,IAAAC,cAAC+H,IAAY,CACX7C,QAAS8C,EAAM9D,UACfW,UAAW,uBAAQmD,EAAMlE,wCAAyBkE,EAAMC,cAAgB,UAInD,IAA1B5B,EAAepM,QACd8F,IAAAC,cAAC8H,IAAQ,KACP/H,IAAAC,cAAC+H,IAAY,CACX7C,QAAQ,uCACRL,UAAU,qGAWhC,EC9RA,MAAMqD,GAAc,IAEd5K,GAAYC,YAAYC,IAAK,CACjCC,KAAM,CACJQ,QAAS,QAEXkK,OAAQ,CACNzK,MAAO,qBACP0K,WAAYF,IAEdG,OAAQ,CACN3K,MAAOwK,GACPI,WAAY,GAEdC,YAAa,CACX7K,MAAOwK,IAETM,QAAShL,EAAMiL,OAAOD,QACtBnJ,QAAS,CACPmF,SAAU,EACVkE,gBAAiBlL,EAAMmH,QAAQgE,WAAWC,QAC1CnE,QAASjH,EAAMK,QAAQ,OAmEZgL,OA/Df,WACE,MAAM/J,EAAUxB,MACTwL,EAAcC,GAAmBrJ,mBAAS,aAE3CsJ,EAAY,CAChB,CAAElH,GAAI,YAAajB,MAAO,6CAAWoI,KAAMlJ,IAAAC,cAAC0F,IAAS,MAAKwD,KAAM,KAChE,CAAEpH,GAAI,QAASjB,MAAO,2BAAQoI,KAAMlJ,IAAAC,cAACmJ,IAAI,MAAKD,KAAM,UACpD,CAAEpH,GAAI,YAAajB,MAAO,2BAAQoI,KAAMlJ,IAAAC,cAAC0H,IAAO,MAAKwB,KAAM,cAC3D,CAAEpH,GAAI,SAAUjB,MAAO,2BAAQoI,KAAMlJ,IAAAC,cAAC4H,IAAY,MAAKsB,KAAM,WAC7D,CAAEpH,GAAI,YAAajB,MAAO,2BAAQoI,KAAMlJ,IAAAC,cAACoJ,IAAM,MAAKF,KAAM,cAC1D,CAAEpH,GAAI,UAAWjB,MAAO,2BAAQoI,KAAMlJ,IAAAC,cAACqJ,IAAU,MAAKH,KAAM,aAG9D,OACEnJ,IAAAC,cAAA,OAAKC,UAAWnB,EAAQrB,MACtBsC,IAAAC,cAACsJ,IAAW,MACZvJ,IAAAC,cAACuJ,IAAM,CAACC,SAAS,QAAQvJ,UAAWnB,EAAQqJ,QAC1CpI,IAAAC,cAACyJ,IAAO,KACN1J,IAAAC,cAACK,IAAU,CAACE,QAAQ,KAAKmJ,QAAM,GAAC,0GAKpC3J,IAAAC,cAAC2J,IAAM,CACL1J,UAAWnB,EAAQuJ,OACnB9H,QAAQ,YACRzB,QAAS,CACPnB,MAAOmB,EAAQyJ,aAEjBqB,OAAO,QAEP7J,IAAAC,cAAA,OAAKC,UAAWnB,EAAQ0J,UACxBzI,IAAAC,cAAC6H,IAAI,KACFmB,EAAUrH,IAAKsC,GACdlE,IAAAC,cAAC8H,IAAQ,CACP+B,QAAM,EACNhI,IAAKoC,EAAKnC,GACVgI,SAAUhB,IAAiB7E,EAAKnC,GAChCiI,QAASA,IAAMhB,EAAgB9E,EAAKnC,KAEpC/B,IAAAC,cAACgK,IAAY,KAAE/F,EAAKgF,MACpBlJ,IAAAC,cAAC+H,IAAY,CAAC7C,QAASjB,EAAKpD,YAKpCd,IAAAC,cAAA,QAAMC,UAAWnB,EAAQO,SACvBU,IAAAC,cAAA,OAAKC,UAAWnB,EAAQ0J,UACxBzI,IAAAC,cAACG,IAAG,KACFJ,IAAAC,cAACiK,IAAM,KACLlK,IAAAC,cAACkK,IAAK,CAACC,OAAK,EAACjB,KAAK,IAAIkB,UAAWC,KACjCtK,IAAAC,cAACkK,IAAK,CAAChB,KAAK,SAASkB,UAAWvL,KAChCkB,IAAAC,cAACkK,IAAK,CAAChB,KAAK,aAAakB,UAAW9G,KACpCvD,IAAAC,cAACkK,IAAK,CAAChB,KAAK,UAAUoB,OAAQA,IAAMvK,IAAAC,cAAA,WAAK,8EACzCD,IAAAC,cAACkK,IAAK,CAAChB,KAAK,aAAaoB,OAAQA,IAAMvK,IAAAC,cAAA,WAAK,8EAC5CD,IAAAC,cAACkK,IAAK,CAAChB,KAAK,WAAWoB,OAAQA,IAAMvK,IAAAC,cAAA,WAAK,iFAMtD,E,kBC7EA,MAAMuK,GAAe,CACnBvL,MAAO,GACPwL,aAAc,KACd9L,SAAS,EACTrD,MAAO,MAsFMoP,OAnFM,WAAmC,IAAlCvL,EAAKlF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuQ,GAAcG,EAAM1Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQwQ,EAAOzN,MACb,KAAKlB,EACL,KAAKG,EACL,KAAKG,EACL,KAAKG,GACL,KAAKG,GACH,MAAO,IACFuC,EACHR,SAAS,EACTrD,MAAO,MAGX,KAAKW,EACH,MAAO,IACFkD,EACHR,SAAS,EACTM,MAAO0L,EAAOxN,QACd7B,MAAO,MAGX,KAAKc,EACH,MAAO,IACF+C,EACHR,SAAS,EACT8L,aAAcE,EAAOxN,QACrB7B,MAAO,MAGX,KAAKiB,EACH,MAAO,IACF4C,EACHR,SAAS,EACTM,MAAO,IACFE,EAAMF,MACTK,QAAS,CAACqL,EAAOxN,WAAagC,EAAMF,MAAMK,SAAW,IACrDsL,eAAgBzL,EAAMF,MAAM2L,eAAiB,GAAK,GAEpDtP,MAAO,MAGX,KAAKoB,GACH,MAAO,IACFyC,EACHR,SAAS,EACTM,MAAO,IACFE,EAAMF,MACTK,SAAUH,EAAMF,MAAMK,SAAW,IAAIsC,IAAIC,GACvCA,EAAKE,KAAO4I,EAAOxN,QAAQ4E,GAAK4I,EAAOxN,QAAU0E,IAGrD4I,aAAcE,EAAOxN,QACrB7B,MAAO,MAGX,KAAKuB,GACH,MAAO,IACFsC,EACHR,SAAS,EACTM,MAAO,IACFE,EAAMF,MACTK,SAAUH,EAAMF,MAAMK,SAAW,IAAIuL,OAAOhJ,GAAQA,EAAKE,KAAO4I,EAAOxN,SACvEyN,cAAeE,KAAKC,KAAK5L,EAAMF,MAAM2L,eAAiB,GAAK,EAAG,IAEhEtP,MAAO,MAGX,KAAKY,EACL,KAAKG,EACL,KAAKG,EACL,KAAKG,GACL,KAAKG,GACH,MAAO,IACFqC,EACHR,SAAS,EACTrD,MAAOqP,EAAOxN,SAGlB,QACE,OAAOgC,EAEb,EC3FA,MAAMqL,GAAe,CACnB7G,MAAO,GACPqH,OAAQ,GACRrM,SAAS,EACTrD,MAAO,MAyDM2P,OAtDU,WAAmC,IAAlC9L,EAAKlF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuQ,GAAcG,EAAM1Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQwQ,EAAOzN,MACb,KAAKuF,GACL,KAAKG,GACL,KAAKG,GACL,KAAKG,GACH,MAAO,IACF/D,EACHR,SAAS,EACTrD,MAAO,MAGX,KAAKoH,GACH,MAAO,IACFvD,EACHR,SAAS,EACTgF,MAAOgH,EAAOxN,QACd7B,MAAO,MAGX,KAAKuH,GACH,MAAO,IACF1D,EACHR,SAAS,EACTqM,OAAQL,EAAOxN,QACf7B,MAAO,MAGX,KAAK0H,GACL,KAAKG,GACH,MAAO,IACFhE,EACHR,SAAS,EACTgF,MAAOxE,EAAMwE,MAAM/B,IAAIsC,GACrBA,EAAKgH,SAAWP,EAAOxN,QAAQ+N,OAASP,EAAOxN,QAAU+G,GAE3D5I,MAAO,MAGX,KAAKqH,GACL,KAAKG,GACL,KAAKG,GACL,KAAKG,GACH,MAAO,IACFjE,EACHR,SAAS,EACTrD,MAAOqP,EAAOxN,SAGlB,QACE,OAAOgC,EAEb,ECjEegM,OALKC,aAAgB,CAClCnM,MAAOyL,GACPhH,UAAWuH,KCDb,MAAMI,GACe,qBAAXxP,QAA0BA,OAAOyP,sCAAyCC,KAOrEC,OALDC,aACZN,GACAE,GAAiBK,aAAgBC,Q,SCQpBlO,OAhBDmO,aAAe,CAC3BhH,QAAS,CACPO,QAAS,CACPC,KAAM,WAERN,UAAW,CACTM,KAAM,YAGVyG,WAAY,CACVC,GAAI,CACFxG,WAAY,QCHlByG,IAASxB,OACPvK,IAAAC,cAAC+L,IAAQ,CAACR,MAAOA,IACfxL,IAAAC,cAACgM,IAAa,KACZjM,IAAAC,cAACiM,IAAa,CAACzO,MAAOA,IACpBuC,IAAAC,cAACsJ,IAAW,MACZvJ,IAAAC,cAAC6I,GAAG,SAIVqD,SAASC,eAAe,Q","file":"static/js/main.de023d5e.chunk.js","sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api/v1',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Books API\nexport const booksApi = {\n  // Get all books with pagination and search\n  getBooks: (params = {}) => {\n    const { page = 0, size = 10, sortBy = 'id', sortDir = 'asc', keyword = '' } = params;\n    return api.get('/books', {\n      params: { page, size, sortBy, sortDir, keyword }\n    });\n  },\n\n  // Get book by ID\n  getBook: (id) => {\n    return api.get(`/books/${id}`);\n  },\n\n  // Get book by ISBN\n  getBookByIsbn: (isbn13) => {\n    return api.get(`/books/isbn/${isbn13}`);\n  },\n\n  // Create new book\n  createBook: (bookData) => {\n    return api.post('/books', bookData);\n  },\n\n  // Update book\n  updateBook: (id, bookData) => {\n    return api.put(`/books/${id}`, bookData);\n  },\n\n  // Delete book\n  deleteBook: (id) => {\n    return api.delete(`/books/${id}`);\n  },\n};\n\n// Inventory API\nexport const inventoryApi = {\n  // Get all inventory\n  getInventory: () => {\n    return api.get('/inventory');\n  },\n\n  // Get inventory by book ID\n  getInventoryByBook: (bookId) => {\n    return api.get(`/inventory/${bookId}`);\n  },\n\n  // Get inventory alerts\n  getInventoryAlerts: () => {\n    return api.get('/inventory/alerts');\n  },\n\n  // Get out of stock items\n  getOutOfStockItems: () => {\n    return api.get('/inventory/out-of-stock');\n  },\n\n  // Receive stock\n  receiveStock: (data) => {\n    return api.post('/inventory/receive', data);\n  },\n\n  // Sell stock\n  sellStock: (data) => {\n    return api.post('/inventory/sell', data);\n  },\n\n  // Adjust stock\n  adjustStock: (data) => {\n    return api.put('/inventory/adjust', data);\n  },\n};\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // Add auth token if available\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle common errors\n    if (error.response?.status === 401) {\n      // Unauthorized - redirect to login\n      localStorage.removeItem('authToken');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;","import { booksApi } from '../../services/api';\n\n// Action Types\nexport const FETCH_BOOKS_START = 'FETCH_BOOKS_START';\nexport const FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS';\nexport const FETCH_BOOKS_FAILURE = 'FETCH_BOOKS_FAILURE';\n\nexport const FETCH_BOOK_START = 'FETCH_BOOK_START';\nexport const FETCH_BOOK_SUCCESS = 'FETCH_BOOK_SUCCESS';\nexport const FETCH_BOOK_FAILURE = 'FETCH_BOOK_FAILURE';\n\nexport const CREATE_BOOK_START = 'CREATE_BOOK_START';\nexport const CREATE_BOOK_SUCCESS = 'CREATE_BOOK_SUCCESS';\nexport const CREATE_BOOK_FAILURE = 'CREATE_BOOK_FAILURE';\n\nexport const UPDATE_BOOK_START = 'UPDATE_BOOK_START';\nexport const UPDATE_BOOK_SUCCESS = 'UPDATE_BOOK_SUCCESS';\nexport const UPDATE_BOOK_FAILURE = 'UPDATE_BOOK_FAILURE';\n\nexport const DELETE_BOOK_START = 'DELETE_BOOK_START';\nexport const DELETE_BOOK_SUCCESS = 'DELETE_BOOK_SUCCESS';\nexport const DELETE_BOOK_FAILURE = 'DELETE_BOOK_FAILURE';\n\n// Action Creators\nexport const fetchBooks = (params = {}) => {\n  return async (dispatch) => {\n    dispatch({ type: FETCH_BOOKS_START });\n    \n    try {\n      const response = await booksApi.getBooks(params);\n      dispatch({\n        type: FETCH_BOOKS_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: FETCH_BOOKS_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const fetchBook = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: FETCH_BOOK_START });\n    \n    try {\n      const response = await booksApi.getBook(id);\n      dispatch({\n        type: FETCH_BOOK_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: FETCH_BOOK_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const createBook = (bookData) => {\n  return async (dispatch) => {\n    dispatch({ type: CREATE_BOOK_START });\n    \n    try {\n      const response = await booksApi.createBook(bookData);\n      dispatch({\n        type: CREATE_BOOK_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: CREATE_BOOK_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const updateBook = (id, bookData) => {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_BOOK_START });\n    \n    try {\n      const response = await booksApi.updateBook(id, bookData);\n      dispatch({\n        type: UPDATE_BOOK_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: UPDATE_BOOK_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const deleteBook = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_BOOK_START });\n    \n    try {\n      await booksApi.deleteBook(id);\n      dispatch({\n        type: DELETE_BOOK_SUCCESS,\n        payload: id\n      });\n      return id;\n    } catch (error) {\n      dispatch({\n        type: DELETE_BOOK_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  TextField,\n  Box,\n  Typography,\n  Chip,\n  CircularProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchBooks } from '../store/actions/booksActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  searchBox: {\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    gap: theme.spacing(2),\n    alignItems: 'center',\n  },\n  levelChip: {\n    minWidth: 60,\n  },\n  titleCell: {\n    maxWidth: 200,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 200,\n  },\n}));\n\nfunction BookList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  \n  // Redux state\n  const books = useSelector((state) => state.books?.books?.content || []);\n  const loading = useSelector((state) => state.books?.loading || false);\n  const error = useSelector((state) => state.books?.error);\n\n  // Local state\n  const [searchKeyword, setSearchKeyword] = useState('');\n  \n  // Constants for pagination and sorting (no UI controls)\n  const page = 0;\n  const rowsPerPage = 10;\n  const sortBy = 'id';\n  const sortDir = 'asc';\n\n  // Fetch books on component mount and when search changes\n  useEffect(() => {\n    const params = {\n      page,\n      size: rowsPerPage,\n      sortBy,\n      sortDir,\n      keyword: searchKeyword,\n    };\n    dispatch(fetchBooks(params));\n  }, [dispatch, searchKeyword]); // Removed pagination dependencies since they're constants\n\n  const handleSearchChange = (event) => {\n    setSearchKeyword(event.target.value);\n  };\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n    const params = {\n      page,\n      size: rowsPerPage,\n      sortBy,\n      sortDir,\n      keyword: searchKeyword,\n    };\n    dispatch(fetchBooks(params));\n  };\n\n  const getLevelColor = (level) => {\n    switch (level) {\n      case 'BEGINNER':\n        return 'primary';\n      case 'INTERMEDIATE':\n        return 'secondary';\n      case 'ADVANCED':\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  const getLevelLabel = (level) => {\n    switch (level) {\n      case 'BEGINNER':\n        return '初級';\n      case 'INTERMEDIATE':\n        return '中級';\n      case 'ADVANCED':\n        return '上級';\n      default:\n        return level;\n    }\n  };\n\n  if (loading && books.length === 0) {\n    return (\n      <div className={classes.loading}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Typography color=\"error\">\n          エラーが発生しました: {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" gutterBottom>\n        書籍一覧\n      </Typography>\n      \n      {/* Search */}\n      <form onSubmit={handleSearchSubmit}>\n        <Box className={classes.searchBox}>\n          <TextField\n            label=\"検索キーワード\"\n            variant=\"outlined\"\n            value={searchKeyword}\n            onChange={handleSearchChange}\n            placeholder=\"タイトル、ISBN、著者名で検索\"\n            style={{ minWidth: 300 }}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            検索\n          </Button>\n        </Box>\n      </form>\n\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>ISBN-13</TableCell>\n                <TableCell>タイトル</TableCell>\n                <TableCell>出版社</TableCell>\n                <TableCell>発行日</TableCell>\n                <TableCell>定価</TableCell>\n                <TableCell>レベル</TableCell>\n                <TableCell>アクション</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {books.map((book) => (\n                <TableRow key={book.id}>\n                  <TableCell>{book.id}</TableCell>\n                  <TableCell>{book.isbn13}</TableCell>\n                  <TableCell className={classes.titleCell}>\n                    <Typography variant=\"body2\" title={book.title}>\n                      {book.title}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>{book.publisherName}</TableCell>\n                  <TableCell>\n                    {book.publicationDate ? new Date(book.publicationDate).toLocaleDateString('ja-JP') : '-'}\n                  </TableCell>\n                  <TableCell>\n                    {book.listPrice ? `¥${book.listPrice.toLocaleString()}` : '-'}\n                  </TableCell>\n                  <TableCell>\n                    {book.level && (\n                      <Chip\n                        label={getLevelLabel(book.level)}\n                        color={getLevelColor(book.level)}\n                        size=\"small\"\n                        className={classes.levelChip}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      詳細\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n}\n\nexport default BookList;","import { inventoryApi } from '../../services/api';\n\n// Action Types\nexport const FETCH_INVENTORY_START = 'FETCH_INVENTORY_START';\nexport const FETCH_INVENTORY_SUCCESS = 'FETCH_INVENTORY_SUCCESS';\nexport const FETCH_INVENTORY_FAILURE = 'FETCH_INVENTORY_FAILURE';\n\nexport const FETCH_INVENTORY_ALERTS_START = 'FETCH_INVENTORY_ALERTS_START';\nexport const FETCH_INVENTORY_ALERTS_SUCCESS = 'FETCH_INVENTORY_ALERTS_SUCCESS';\nexport const FETCH_INVENTORY_ALERTS_FAILURE = 'FETCH_INVENTORY_ALERTS_FAILURE';\n\nexport const RECEIVE_STOCK_START = 'RECEIVE_STOCK_START';\nexport const RECEIVE_STOCK_SUCCESS = 'RECEIVE_STOCK_SUCCESS';\nexport const RECEIVE_STOCK_FAILURE = 'RECEIVE_STOCK_FAILURE';\n\nexport const SELL_STOCK_START = 'SELL_STOCK_START';\nexport const SELL_STOCK_SUCCESS = 'SELL_STOCK_SUCCESS';\nexport const SELL_STOCK_FAILURE = 'SELL_STOCK_FAILURE';\n\n// Action Creators\nexport const fetchInventory = () => {\n  return async (dispatch) => {\n    dispatch({ type: FETCH_INVENTORY_START });\n    \n    try {\n      const response = await inventoryApi.getInventory();\n      dispatch({\n        type: FETCH_INVENTORY_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: FETCH_INVENTORY_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const fetchInventoryAlerts = () => {\n  return async (dispatch) => {\n    dispatch({ type: FETCH_INVENTORY_ALERTS_START });\n    \n    try {\n      const response = await inventoryApi.getInventoryAlerts();\n      dispatch({\n        type: FETCH_INVENTORY_ALERTS_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: FETCH_INVENTORY_ALERTS_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const receiveStock = (stockData) => {\n  return async (dispatch) => {\n    dispatch({ type: RECEIVE_STOCK_START });\n    \n    try {\n      const response = await inventoryApi.receiveStock(stockData);\n      dispatch({\n        type: RECEIVE_STOCK_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: RECEIVE_STOCK_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};\n\nexport const sellStock = (stockData) => {\n  return async (dispatch) => {\n    dispatch({ type: SELL_STOCK_START });\n    \n    try {\n      const response = await inventoryApi.sellStock(stockData);\n      dispatch({\n        type: SELL_STOCK_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: SELL_STOCK_FAILURE,\n        payload: error.response?.data?.message || error.message\n      });\n      throw error;\n    }\n  };\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Chip,\n  Box,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchInventory } from '../store/actions/inventoryActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  actionButtons: {\n    display: 'flex',\n    gap: theme.spacing(1),\n  },\n  stockChip: {\n    minWidth: 60,\n  },\n  titleCell: {\n    maxWidth: 200,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 200,\n  },\n}));\n\nfunction InventoryList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  \n  // Redux state - using real API calls instead of mock data\n  const inventoryItems = useSelector((state) => state.inventory?.items || []);\n  const loading = useSelector((state) => state.inventory?.loading || false);\n  const error = useSelector((state) => state.inventory?.error);\n\n  useEffect(() => {\n    dispatch(fetchInventory());\n  }, [dispatch]);\n\n  const getStockStatusColor = (availableStock, lowStock) => {\n    if (availableStock <= 0) {\n      return 'secondary'; // Red for out of stock\n    } else if (lowStock) {\n      return 'primary'; // Orange for low stock\n    } else {\n      return 'default'; // Green for normal stock\n    }\n  };\n\n  const getStockStatusLabel = (availableStock, lowStock) => {\n    if (availableStock <= 0) {\n      return '在庫切れ';\n    } else if (lowStock) {\n      return '在庫少';\n    } else {\n      return '在庫有';\n    }\n  };\n\n  const formatLocation = (locationCode) => {\n    return locationCode || '-';\n  };\n\n  if (loading) {\n    return (\n      <div className={classes.loading}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Typography color=\"error\">\n          エラーが発生しました: {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" gutterBottom>\n        在庫一覧\n      </Typography>\n\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>書籍タイトル</TableCell>\n                <TableCell>ISBN-13</TableCell>\n                <TableCell align=\"right\">店頭在庫</TableCell>\n                <TableCell align=\"right\">倉庫在庫</TableCell>\n                <TableCell align=\"right\">予約数</TableCell>\n                <TableCell align=\"right\">利用可能在庫</TableCell>\n                <TableCell>在庫状況</TableCell>\n                <TableCell>棚番号</TableCell>\n                <TableCell>アクション</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {inventoryItems.map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell className={classes.titleCell}>\n                    <Typography variant=\"body2\" title={item.bookTitle}>\n                      {item.bookTitle}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>{item.isbn13}</TableCell>\n                  <TableCell align=\"right\">{item.storeStock}</TableCell>\n                  <TableCell align=\"right\">{item.warehouseStock}</TableCell>\n                  <TableCell align=\"right\">{item.reservedCount}</TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body2\"\n                      color={item.availableStock <= 0 ? \"error\" : \"textPrimary\"}\n                    >\n                      {item.availableStock}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={getStockStatusLabel(item.availableStock, item.lowStock)}\n                      color={getStockStatusColor(item.availableStock, item.lowStock)}\n                      size=\"small\"\n                      className={classes.stockChip}\n                    />\n                  </TableCell>\n                  <TableCell>{formatLocation(item.locationCode)}</TableCell>\n                  <TableCell>\n                    <div className={classes.actionButtons}>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"primary\"\n                      >\n                        入荷\n                      </Button>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"secondary\"\n                      >\n                        販売\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {inventoryItems.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={9} align=\"center\">\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      在庫データがありません\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n}\n\nexport default InventoryList;","import React, { useEffect, useState } from 'react';\nimport {\n  Grid,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  Chip,\n  CircularProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Warning, Storage, ShoppingCart } from '@material-ui/icons';\nimport { inventoryApi, booksApi } from '../services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  card: {\n    height: '100%',\n  },\n  statCard: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(2),\n  },\n  statIcon: {\n    fontSize: 40,\n    color: theme.palette.primary.main,\n  },\n  statNumber: {\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    color: theme.palette.text.primary,\n  },\n  alertCard: {\n    padding: theme.spacing(2),\n  },\n  alertIcon: {\n    color: theme.palette.warning.main,\n    marginRight: theme.spacing(1),\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 200,\n  },\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState({\n    totalBooks: 0,\n    lowStockItems: 0,\n    outOfStock: 0,\n    pendingOrders: 0,\n  });\n  const [recentBooks, setRecentBooks] = useState([]);\n  const [lowStockAlerts, setLowStockAlerts] = useState([]);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all data in parallel\n        const [booksResponse, inventoryResponse, alertsResponse, outOfStockResponse] = await Promise.all([\n          booksApi.getBooks({ page: 0, size: 5, sortBy: 'id', sortDir: 'desc' }),\n          inventoryApi.getInventory(),\n          inventoryApi.getInventoryAlerts(),\n          inventoryApi.getOutOfStockItems(),\n        ]);\n\n        // Calculate statistics\n        const inventory = inventoryResponse.data;\n        const totalBooks = inventory.length;\n        const lowStockItems = alertsResponse.data.length;\n        const outOfStock = outOfStockResponse.data.length;\n        const pendingOrders = inventory.reduce((sum, item) => sum + (item.reservedCount || 0), 0);\n\n        setStats({\n          totalBooks,\n          lowStockItems,\n          outOfStock,\n          pendingOrders,\n        });\n\n        setRecentBooks(booksResponse.data.content || booksResponse.data || []);\n        setLowStockAlerts(alertsResponse.data || []);\n      } catch (err) {\n        console.error('Error fetching dashboard data:', err);\n        setError(err.response?.data?.message || err.message || 'データの取得に失敗しました');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const getLevelLabel = (level) => {\n    switch (level) {\n      case 'BEGINNER':\n        return '初級';\n      case 'INTERMEDIATE':\n        return '中級';\n      case 'ADVANCED':\n        return '上級';\n      default:\n        return '-';\n    }\n  };\n\n  const getLevelColor = (level) => {\n    switch (level) {\n      case 'BEGINNER':\n        return 'primary';\n      case 'INTERMEDIATE':\n        return 'secondary';\n      case 'ADVANCED':\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className={classes.loading}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box p={2}>\n        <Typography color=\"error\">\n          エラーが発生しました: {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" gutterBottom>\n        ダッシュボード\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Statistics Cards */}\n        <Grid item xs={12} sm={6} md={3}>\n          <Card className={classes.card}>\n            <CardContent className={classes.statCard}>\n              <Storage className={classes.statIcon} />\n              <Box>\n                <Typography className={classes.statNumber}>\n                  {stats?.totalBooks || 0}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  総書籍数\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card className={classes.card}>\n            <CardContent className={classes.statCard}>\n              <Warning className={classes.statIcon} style={{ color: '#ff9800' }} />\n              <Box>\n                <Typography className={classes.statNumber}>\n                  {stats?.lowStockItems || 0}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  在庫不足\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card className={classes.card}>\n            <CardContent className={classes.statCard}>\n              <Warning className={classes.statIcon} style={{ color: '#f44336' }} />\n              <Box>\n                <Typography className={classes.statNumber}>\n                  {stats?.outOfStock || 0}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  在庫切れ\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card className={classes.card}>\n            <CardContent className={classes.statCard}>\n              <ShoppingCart className={classes.statIcon} />\n              <Box>\n                <Typography className={classes.statNumber}>\n                  {stats?.pendingOrders || 0}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  予約待ち\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Recent Books */}\n        <Grid item xs={12} md={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                最近追加された書籍\n              </Typography>\n              <List>\n                {recentBooks.map((book) => (\n                  <ListItem key={book.id}>\n                    <ListItemText\n                      primary={book.title}\n                      secondary={`ISBN: ${book.isbn13}`}\n                    />\n                    <Chip\n                      label={getLevelLabel(book.level)}\n                      color={getLevelColor(book.level)}\n                      size=\"small\"\n                    />\n                  </ListItem>\n                ))}\n                {recentBooks.length === 0 && (\n                  <ListItem>\n                    <ListItemText \n                      primary=\"データがありません\"\n                      secondary=\"最近追加された書籍はありません\"\n                    />\n                  </ListItem>\n                )}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Inventory Alerts */}\n        <Grid item xs={12} md={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                在庫アラート\n              </Typography>\n              <List>\n                {lowStockAlerts.map((alert) => (\n                  <ListItem key={alert.id}>\n                    <Warning className={classes.alertIcon} />\n                    <ListItemText\n                      primary={alert.bookTitle}\n                      secondary={`在庫数: ${alert.availableStock} / 発注点: ${alert.reorderPoint || '-'}`}\n                    />\n                  </ListItem>\n                ))}\n                {lowStockAlerts.length === 0 && (\n                  <ListItem>\n                    <ListItemText \n                      primary=\"アラートなし\"\n                      secondary=\"現在、在庫アラートはありません\"\n                    />\n                  </ListItem>\n                )}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, Drawer, List, ListItem, ListItemIcon, ListItemText, Box, CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dashboard, Book, Storage, ShoppingCart, People, Assessment } from '@material-ui/icons';\nimport BookList from './components/BookList';\nimport InventoryList from './components/InventoryList';\nimport DashboardPage from './components/Dashboard';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [selectedMenu, setSelectedMenu] = useState('dashboard');\n\n  const menuItems = [\n    { id: 'dashboard', label: 'ダッシュボード', icon: <Dashboard />, path: '/' },\n    { id: 'books', label: '書籍管理', icon: <Book />, path: '/books' },\n    { id: 'inventory', label: '在庫管理', icon: <Storage />, path: '/inventory' },\n    { id: 'orders', label: '発注管理', icon: <ShoppingCart />, path: '/orders' },\n    { id: 'customers', label: '顧客管理', icon: <People />, path: '/customers' },\n    { id: 'reports', label: 'レポート', icon: <Assessment />, path: '/reports' },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            TechBookStore - 技術専門書店在庫管理システム\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.id}\n              selected={selectedMenu === item.id}\n              onClick={() => setSelectedMenu(item.id)}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.label} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Box>\n          <Switch>\n            <Route exact path=\"/\" component={DashboardPage} />\n            <Route path=\"/books\" component={BookList} />\n            <Route path=\"/inventory\" component={InventoryList} />\n            <Route path=\"/orders\" render={() => <div>発注管理ページ（開発中）</div>} />\n            <Route path=\"/customers\" render={() => <div>顧客管理ページ（開発中）</div>} />\n            <Route path=\"/reports\" render={() => <div>レポートページ（開発中）</div>} />\n          </Switch>\n        </Box>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import {\n  FETCH_BOOKS_START,\n  FETCH_BOOKS_SUCCESS,\n  FETCH_BOOKS_FAILURE,\n  FETCH_BOOK_START,\n  FETCH_BOOK_SUCCESS,\n  FETCH_BOOK_FAILURE,\n  CREATE_BOOK_START,\n  CREATE_BOOK_SUCCESS,\n  CREATE_BOOK_FAILURE,\n  UPDATE_BOOK_START,\n  UPDATE_BOOK_SUCCESS,\n  UPDATE_BOOK_FAILURE,\n  DELETE_BOOK_START,\n  DELETE_BOOK_SUCCESS,\n  DELETE_BOOK_FAILURE,\n} from '../actions/booksActions';\n\nconst initialState = {\n  books: [],\n  selectedBook: null,\n  loading: false,\n  error: null,\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_BOOKS_START:\n    case FETCH_BOOK_START:\n    case CREATE_BOOK_START:\n    case UPDATE_BOOK_START:\n    case DELETE_BOOK_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_BOOKS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        books: action.payload,\n        error: null,\n      };\n\n    case FETCH_BOOK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        selectedBook: action.payload,\n        error: null,\n      };\n\n    case CREATE_BOOK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        books: {\n          ...state.books,\n          content: [action.payload, ...(state.books.content || [])],\n          totalElements: (state.books.totalElements || 0) + 1,\n        },\n        error: null,\n      };\n\n    case UPDATE_BOOK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        books: {\n          ...state.books,\n          content: (state.books.content || []).map(book =>\n            book.id === action.payload.id ? action.payload : book\n          ),\n        },\n        selectedBook: action.payload,\n        error: null,\n      };\n\n    case DELETE_BOOK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        books: {\n          ...state.books,\n          content: (state.books.content || []).filter(book => book.id !== action.payload),\n          totalElements: Math.max((state.books.totalElements || 0) - 1, 0),\n        },\n        error: null,\n      };\n\n    case FETCH_BOOKS_FAILURE:\n    case FETCH_BOOK_FAILURE:\n    case CREATE_BOOK_FAILURE:\n    case UPDATE_BOOK_FAILURE:\n    case DELETE_BOOK_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;","import {\n  FETCH_INVENTORY_START,\n  FETCH_INVENTORY_SUCCESS,\n  FETCH_INVENTORY_FAILURE,\n  FETCH_INVENTORY_ALERTS_START,\n  FETCH_INVENTORY_ALERTS_SUCCESS,\n  FETCH_INVENTORY_ALERTS_FAILURE,\n  RECEIVE_STOCK_START,\n  RECEIVE_STOCK_SUCCESS,\n  RECEIVE_STOCK_FAILURE,\n  SELL_STOCK_START,\n  SELL_STOCK_SUCCESS,\n  SELL_STOCK_FAILURE,\n} from '../actions/inventoryActions';\n\nconst initialState = {\n  items: [],\n  alerts: [],\n  loading: false,\n  error: null,\n};\n\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_INVENTORY_START:\n    case FETCH_INVENTORY_ALERTS_START:\n    case RECEIVE_STOCK_START:\n    case SELL_STOCK_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_INVENTORY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n        error: null,\n      };\n\n    case FETCH_INVENTORY_ALERTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        alerts: action.payload,\n        error: null,\n      };\n\n    case RECEIVE_STOCK_SUCCESS:\n    case SELL_STOCK_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        items: state.items.map(item =>\n          item.bookId === action.payload.bookId ? action.payload : item\n        ),\n        error: null,\n      };\n\n    case FETCH_INVENTORY_FAILURE:\n    case FETCH_INVENTORY_ALERTS_FAILURE:\n    case RECEIVE_STOCK_FAILURE:\n    case SELL_STOCK_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default inventoryReducer;","import { combineReducers } from 'redux';\nimport booksReducer from './booksReducer';\nimport inventoryReducer from './inventoryReducer';\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n  inventory: inventoryReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n// Enable Redux DevTools in development\nconst composeEnhancers = \n  (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n  typography: {\n    h6: {\n      fontWeight: 600,\n    },\n  },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport store from './store/index';\nimport theme from './theme';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}